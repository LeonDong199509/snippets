# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        # Time O(n), Space O(n)
        if not root:
            return []
        
        result = [[root.val]]
        from collections import deque
        queue = deque([[root.left, root.right]])
        while queue:
            current_result = []
            current_level_nodes = queue.popleft()
            next_level_nodes = []
            for node in current_level_nodes:
                if node:
                    current_result.append(node.val)
                    next_level_nodes.append(node.left)
                    next_level_nodes.append(node.right)
            if next_level_nodes:
                queue.append(next_level_nodes)
            if current_result:
                result.append(current_result)
        return result
            
        
